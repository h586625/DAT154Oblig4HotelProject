@page "/login"

@attribute [AllowAnonymous]


@using BlazingCustomerBooking.Auth

@inject NavigationManager navigationManager
@inject BlazorAuthenticationStateProvider authStateProvider

<PageTitle>Login User</PageTitle>

<h1>Login User</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">
    <DataAnnotationsValidator />
    <label for="inputUsername" class="sr-only">User Name</label>
    <InputText id="inputUsername" class="form-control" @bind-Value="loginRequest.Name" autofocus placeholder="Username" />
    <ValidationMessage For="@(() => loginRequest.Name)" />
    <label for="inputPassword" class="sr-only">Password</label>
    <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="loginRequest.Password" />
    <ValidationMessage For="@(() => loginRequest.Password)" /> 
    <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
    <label class="text-danger">@error</label>
</EditForm>

@code {
    Library.Models.User loginRequest { get; set; } = new Library.Models.User();
    string error { get; set; }
    async Task OnSubmit()
    {
        error = null;
        try
        {
            if (authStateProvider.SignIn(loginRequest))
            {
                navigationManager.NavigateTo("");
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}